import streamlit as st
import sqlite3
import pandas as pd
from fpdf import FPDF
import os

DB_PATH = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'users.db')

def generate_pdf(df, username, full_name, gender, age):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, txt=f"Health Report for {full_name} ({username})", ln=True, align="C")
    pdf.cell(200, 10, txt=f"Gender: {gender}, Age: {age} years", ln=True, align="C")
    pdf.cell(200, 10, txt="Generated by Diabetes Prediction App", ln=True, align="C")
    pdf.ln(10)
    pdf.set_font("Arial", size=10)
    pdf.cell(60, 10, "Timestamp", border=1)
    pdf.cell(40, 10, "Glucose", border=1)
    pdf.cell(40, 10, "BMI", border=1)
    pdf.cell(50, 10, "Prediction", border=1)
    pdf.ln()

    for _, row in df.iterrows():
        pdf.cell(60, 10, row["Timestamp"], border=1)
        pdf.cell(40, 10, f"{row['Glucose']:.2f}", border=1)
        pdf.cell(40, 10, f"{row['BMI']:.2f}", border=1)
        pdf.cell(50, 10, row["Prediction"], border=1)
        pdf.ln()

    pdf_file = f"{username}_health_report.pdf"
    pdf.output(pdf_file)
    return pdf_file

def health_report_page():
    st.title("ðŸ“„ Health Report")
    if "username" in st.session_state:
        conn = sqlite3.connect(DB_PATH)
        c = conn.cursor()
        c.execute("SELECT full_name, gender, age FROM users WHERE username = ?", (st.session_state.username,))
        user_details = c.fetchone()
        c.execute("SELECT glucose, bmi, prediction, timestamp FROM results WHERE username = ?", (st.session_state.username,))
        results = c.fetchall()
        conn.close()

        if user_details and results:
            df = pd.DataFrame(results, columns=["Glucose", "BMI", "Prediction", "Timestamp"])
            pdf_file = generate_pdf(df, st.session_state.username, *user_details)
            with open(pdf_file, "rb") as f:
                st.download_button("ðŸ“¥ Download Health Report", data=f, file_name=pdf_file, mime="application/pdf")
        else:
            st.error("No data available to generate the report.")
    else:
        st.error("You must be logged in to access this page.")
